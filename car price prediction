#Using Python as a programming language and implement some data analysis of various parameters to extract some features with using numpy, pandas, sklearn, matplotlib, seaborn 
as the libraries used to preprocess, visualize, and train the models for prediction for car prices in dataset. 

import numpy as np # linear algebra
import pandas as pd # (pd.read_csv)
import seaborn as sns #  data visualization library based on matplotlib

import os
for dirname, _, filenames in os.walk('/kaggle/input'):
    for filename in filenames:
        print(os.path.join(dirname, filename))

car_file = '../input/carprediction/car data.csv'
df = pd.read_csv(car_file)

df.head()
	Car_Name	company	Year	Selling_Price	Present_Price	Kms_Driven	Fuel_Type	Seller_Type	Transmission	Owner
0	ritz	maruti suzuki	2014	3.35	5.59	27000	Petrol	Dealer	Manual	0
1	sx4	maruti suzuki	2013	4.75	9.54	43000	Diesel	Dealer	Manual	0
2	ciaz	maruti suzuki	2017	7.25	9.85	6900	Petrol	Dealer	Manual	0
3	wagon r	maruti suzuki	2011	2.85	4.15	5200	Petrol	Dealer	Manual	0
4	swift	maruti suzuki	2014	4.60	6.87	42450	Diesel	Dealer	Manual	0

final_dataset = df[['company', 'Year', 'Selling_Price', 'Present_Price',
       'Kms_Driven', 'Fuel_Type', 'Seller_Type', 'Transmission', 'Owner']]
final_dataset.head()

company	Year	Selling_Price	Present_Price	Kms_Driven	Fuel_Type	Seller_Type	Transmission	Owner
0	maruti suzuki	2014	3.35	5.59	27000	Petrol	Dealer	Manual	0
1	maruti suzuki	2013	4.75	9.54	43000	Diesel	Dealer	Manual	0
2	maruti suzuki	2017	7.25	9.85	6900	Petrol	Dealer	Manual	0
3	maruti suzuki	2011	2.85	4.15	5200	Petrol	Dealer	Manual	0
4	maruti suzuki	2014	4.60	6.87	42450	Diesel	Dealer	Manual	0

# create a var old = current year - given year
final_dataset['Current_Year'] = 2021
final_dataset.head()

final_dataset['Number_of_Years'] = final_dataset['Current_Year'] - final_dataset['Year']
final_dataset.head()

final_dataset.drop(['Year','Current_Year','company'],axis=1,inplace=True)
final_dataset.head()

Selling_Price	Present_Price	Kms_Driven	Fuel_Type	Seller_Type	Transmission	Owner	Number_of_Years
0	3.35	5.59	27000	Petrol	Dealer	Manual	0	7
1	4.75	9.54	43000	Diesel	Dealer	Manual	0	8
2	7.25	9.85	6900	Petrol	Dealer	Manual	0	4
3	2.85	4.15	5200	Petrol	Dealer	Manual	0	10
4	4.60	6.87	42450	Diesel	Dealer	Manual	0	7

final_dataset.corr()

from sklearn.ensemble import ExtraTreesRegressor
model = ExtraTreesRegressor()
model.fit(X, y)

# find out importance of each features
print(final_dataset.columns)
print(model.feature_importances_)
Index(['Selling_Price', 'Present_Price', 'Kms_Driven', 'Owner',
       'Number_of_Years', 'Fuel_Type_Diesel', 'Fuel_Type_Petrol',
       'Seller_Type_Individual', 'Transmission_Manual'],
      dtype='object')
[0.40777264 0.04110078 0.0004247  0.07830271 0.21707553 0.01356768
 0.11548913 0.12626683]
 
 from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test = train_test_split(X, y, test_size = 0.2)

from sklearn.ensemble import RandomForestRegressor
rf_random = RandomForestRegressor()

rf_random.fit(X_train,y_train)

predictions=rf_random.predict(X_test)
sns.distplot(y_test-predictions)

output = pd.DataFrame({'SalePrice': predictions})
output.to_csv('submission.csv', index=False)
print("csv created")

import pickle
file = open('car_pre_regression_modl.pkl', 'wb')
pickle.dump(rf_random, file)
